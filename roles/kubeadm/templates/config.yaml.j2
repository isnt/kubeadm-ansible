{% if inventory_hostname == groups['master'][0] %}
---
apiVersion: kubeadm.k8s.io/v1beta3
kind: InitConfiguration
localAPIEndpoint:
  advertiseAddress: "{{ internal_address }}"
nodeRegistration:
  criSocket: unix:///run/containerd/containerd.sock
  kubeletExtraArgs:
    cgroup-driver: systemd
---
apiVersion: kubeadm.k8s.io/v1beta3
kind: ClusterConfiguration
{% if (groups['master'] | length) > 1 %}
controlPlaneEndpoint: "{{ control_plane_endpoint }}"
apiServer:
  certSANs:
  - 127.0.0.1
  - localhost
  - "{{ control_plane_endpoint | regex_replace(':.*') }}"
{% for controller in groups['master'] %}
  - "{{ hostvars[controller]['ansible_' + (internal_interface | default(ansible_facts.ansible_default_ipv4.interface))].ipv4.address }}"
{% endfor %}
{% if feature_gates is defined and feature_gates != "" %}
  extraArgs:
    feature-gates: {{ feature_gates }}
{% endif %}
{% endif %}
networking:
  dnsDomain: "{{ dns_domain }}"
  podSubnet: "{{ pod_subnet }}"
  serviceSubnet: "{{ service_subnet }}"
{% else %}
---
apiVersion: kubeadm.k8s.io/v1beta3
kind: JoinConfiguration
{% if inventory_hostname in groups['master'] %}
controlPlane:
  localAPIEndpoint:
    advertiseAddress: "{{ internal_address }}"
{% endif %}
discovery:
  bootstrapToken:
    apiServerEndpoint: "{{ control_plane_endpoint }}"
    caCertHashes:
    - "sha256:{{ kubeadm_discovery_token }}"
    token: "{{ kubeadm_token }}"
nodeRegistration:
  criSocket: unix:///run/containerd/containerd.sock
  kubeletExtraArgs:
    cgroup-driver: systemd
{% endif %}
